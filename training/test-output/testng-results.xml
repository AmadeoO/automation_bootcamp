<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="59" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="59" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
      <class name="training.ExampleTest">
        <test-method status="PASS" signature="beforeC()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="beforeC" is-config="true" duration-ms="9" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeC -->
        <test-method status="PASS" signature="before()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="before" is-config="true" duration-ms="1" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="metodo()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="metodo" duration-ms="9" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at training.ExampleTest.metodo(ExampleTest.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- metodo -->
        <test-method status="PASS" signature="after()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="after" is-config="true" duration-ms="0" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="metodo2()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="metodo2" duration-ms="2" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- metodo2 -->
        <test-method status="PASS" signature="before()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="before" is-config="true" duration-ms="0" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="after" is-config="true" duration-ms="1" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="before" is-config="true" duration-ms="1" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:training.ExampleTest@8bd1b6a]" name="test" duration-ms="1" started-at="2018-03-13T23:14:03Z" data-provider="Authentication" finished-at="2018-03-13T23:14:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser_1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Juan]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="after()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="after" is-config="true" duration-ms="1" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="before" is-config="true" duration-ms="0" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:training.ExampleTest@8bd1b6a]" name="test" duration-ms="2" started-at="2018-03-13T23:14:03Z" data-provider="Authentication" finished-at="2018-03-13T23:14:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser_2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pedro]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Nombres distintos expected [Pedro] but found [Juan]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Nombres distintos expected [Pedro] but found [Juan]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at training.ExampleTest.test(ExampleTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="after()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="after" is-config="true" duration-ms="1" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterC()[pri:0, instance:training.ExampleTest@8bd1b6a]" name="afterC" is-config="true" duration-ms="0" started-at="2018-03-13T23:14:03Z" finished-at="2018-03-13T23:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterC -->
      </class> <!-- training.ExampleTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
